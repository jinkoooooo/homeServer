[{"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\index.tsx":"1","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\reportWebVitals.ts":"2","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\App.tsx":"3","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\routes\\Routes.tsx":"4","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\theme\\index.ts":"5","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\routes\\MenuRoutes.tsx":"6","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\layouts\\Dashboard.tsx":"7","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\layouts\\Auth.tsx":"8","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\pages\\exception\\Page404.tsx":"9","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\theme\\shadows.ts":"10","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\theme\\props.ts":"11","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\theme\\breakpoints.ts":"12","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\theme\\overrides.ts":"13","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\redux\\reducers\\index.ts":"14","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\pages\\dashboard\\Dashboard.tsx":"15","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\theme\\typography.ts":"16","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\theme\\variants.ts":"17","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\components\\Sidebar.tsx":"18","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\components\\AppBar.tsx":"19","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\components\\Async.tsx":"20","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\redux\\reducers\\authReducer.ts":"21","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\redux\\reducers\\authMenuStore.tsx":"22","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\redux\\reducers\\authStore.tsx":"23","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\pages\\dashboard\\DeviceConnectionInfo.tsx":"24","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\redux\\reducers\\themeReducer.ts":"25","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\pages\\dashboard\\DoughnutChartByOperation.tsx":"26","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\pages\\dashboard\\Stats.tsx":"27","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\pages\\dashboard\\LineChart.tsx":"28","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\pages\\dashboard\\Actions.tsx":"29","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\components\\Loader.tsx":"30","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\constants\\index.ts":"31","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\components\\UserDropdown.tsx":"32","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\redux\\actions\\themeActions.ts":"33","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\redux\\store\\index.ts":"34"},{"size":606,"mtime":1626832722051,"results":"35","hashOfConfig":"36"},{"size":440,"mtime":1623825786609,"results":"37","hashOfConfig":"36"},{"size":1935,"mtime":1626832652322,"results":"38","hashOfConfig":"36"},{"size":1993,"mtime":1626830393107,"results":"39","hashOfConfig":"36"},{"size":952,"mtime":1606827188730,"results":"40","hashOfConfig":"36"},{"size":3113,"mtime":1626832910841,"results":"41","hashOfConfig":"36"},{"size":3043,"mtime":1626829673735,"results":"42","hashOfConfig":"36"},{"size":750,"mtime":1606827188263,"results":"43","hashOfConfig":"36"},{"size":1379,"mtime":1611795938438,"results":"44","hashOfConfig":"36"},{"size":683,"mtime":1606827188738,"results":"45","hashOfConfig":"36"},{"size":256,"mtime":1606827188734,"results":"46","hashOfConfig":"36"},{"size":147,"mtime":1606827188726,"results":"47","hashOfConfig":"36"},{"size":1650,"mtime":1606827188730,"results":"48","hashOfConfig":"36"},{"size":631,"mtime":1611802294742,"results":"49","hashOfConfig":"36"},{"size":1330,"mtime":1626831869585,"results":"50","hashOfConfig":"36"},{"size":1139,"mtime":1606827188742,"results":"51","hashOfConfig":"36"},{"size":5444,"mtime":1606827188746,"results":"52","hashOfConfig":"36"},{"size":12386,"mtime":1613437057402,"results":"53","hashOfConfig":"36"},{"size":2922,"mtime":1626831495438,"results":"54","hashOfConfig":"36"},{"size":922,"mtime":1606827188164,"results":"55","hashOfConfig":"36"},{"size":802,"mtime":1611796515772,"results":"56","hashOfConfig":"36"},{"size":778,"mtime":1611796721463,"results":"57","hashOfConfig":"36"},{"size":1454,"mtime":1611796685902,"results":"58","hashOfConfig":"36"},{"size":3251,"mtime":1613437057419,"results":"59","hashOfConfig":"36"},{"size":609,"mtime":1606827188713,"results":"60","hashOfConfig":"36"},{"size":3426,"mtime":1613612015327,"results":"61","hashOfConfig":"36"},{"size":2292,"mtime":1612854660624,"results":"62","hashOfConfig":"36"},{"size":2739,"mtime":1613437057427,"results":"63","hashOfConfig":"36"},{"size":1075,"mtime":1612860486892,"results":"64","hashOfConfig":"36"},{"size":396,"mtime":1606827188247,"results":"65","hashOfConfig":"36"},{"size":843,"mtime":1606827188258,"results":"66","hashOfConfig":"36"},{"size":1469,"mtime":1626831489669,"results":"67","hashOfConfig":"36"},{"size":259,"mtime":1606827188708,"results":"68","hashOfConfig":"36"},{"size":434,"mtime":1606827188716,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1k5ojup",{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"74"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"74"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"126"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"126"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\index.tsx",[],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\reportWebVitals.ts",[],["150","151"],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\App.tsx",["152","153"],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\routes\\Routes.tsx",["154"],"import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  RouteComponentProps,\r\n} from \"react-router-dom\";\r\nimport AuthLayout from \"../layouts/Auth\";\r\nimport DashboardLayout from \"../layouts/Dashboard\";\r\nimport Page404 from \"../pages/exception/Page404\";\r\nimport {RouteChildType, RouteType} from \"../types/routes\";\r\nimport {useTypedSelector} from \"../redux/reducers\";\r\nimport MenuRoutes from \"./MenuRoutes\";\r\n\r\n\r\nconst childRoutes = (Layout: React.ElementType, routes: Array<RouteType>) =>\r\n  routes.map(\r\n    ({ component: Component, guard, children, path }, index: number) => {\r\n      const Guard = guard || React.Fragment;\r\n\r\n      return children ? (\r\n        children.map((element, index: number) => {\r\n          const Guard = element.guard || React.Fragment;\r\n\r\n          return (\r\n            <Route\r\n              key={index}\r\n              path={element.path}\r\n              exact\r\n              render={(props: RouteComponentProps) => (\r\n                <Guard>\r\n                  <Layout>\r\n                    <element.component {...props} />\r\n                  </Layout>\r\n                </Guard>\r\n              )}\r\n            />\r\n          );\r\n        })\r\n      ) : Component ? (\r\n        <Route\r\n          key={index}\r\n          path={path}\r\n          exact\r\n          render={(props) => (\r\n            <Guard>\r\n              <Layout>\r\n                <Component {...props} />\r\n              </Layout>\r\n            </Guard>\r\n          )}\r\n        />\r\n      ) : null;\r\n    }\r\n  );\r\n\r\n\r\nconst Routes = () => {\r\n    const userAuth = useTypedSelector(state => state.userAuth);\r\n\r\n    return (<Router>\r\n        <Switch>\r\n            {childRoutes(DashboardLayout, MenuRoutes(userAuth.menus))}\r\n            <Route\r\n                render={() => (\r\n                    <AuthLayout>\r\n                        <Page404 />\r\n                    </AuthLayout>\r\n                )}\r\n            />\r\n        </Switch>\r\n    </Router>);\r\n}\r\n\r\nexport default Routes;\r\n","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\theme\\index.ts",[],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\routes\\MenuRoutes.tsx",["155","156","157","158","159","160","161","162","163","164","165","166","167","168","169"],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\layouts\\Dashboard.tsx",["170","171"],"import React, {useState} from \"react\";\r\nimport styled, {createGlobalStyle} from \"styled-components/macro\";\r\nimport {GlobalStyleProps} from \"../types/styles\";\r\nimport {RouteType} from \"../types/routes\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport Header from \"../components/AppBar\";\r\nimport Footer from \"../components/Footer\";\r\nimport Settings from \"../components/Settings\";\r\n\r\nimport {spacing} from \"@material-ui/system\";\r\nimport {\r\n  Hidden,\r\n  CssBaseline,\r\n  Paper as MuiPaper,\r\n  withWidth,\r\n} from \"@material-ui/core\";\r\n\r\nimport {isWidthUp} from \"@material-ui/core/withWidth\";\r\n\r\nconst drawerWidth = 258;\r\n\r\nconst GlobalStyle = createGlobalStyle<GlobalStyleProps>`\r\n  html,\r\n  body,\r\n  #root {\r\n    height: 100%;\r\n  }\r\n\r\n  body {\r\n    background: ${(props) => props.theme.palette.background.default};\r\n  }\r\n\r\n  .MuiCardHeader-action .MuiIconButton-root {\r\n    padding: 4px;\r\n    width: 28px;\r\n    height: 28px;\r\n  }\r\n`;\r\n\r\nconst Root = styled.div`\r\n  display: flex;\r\n  min-height: 100vh;\r\n`;\r\n\r\nconst Drawer = styled.div`\r\n  ${(props) => props.theme.breakpoints.up(\"md\")} {\r\n    width: ${drawerWidth}px;\r\n    flex-shrink: 0;\r\n  }\r\n`;\r\n\r\nconst AppContent = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Paper = styled(MuiPaper)(spacing);\r\n\r\nconst MainContent = styled(Paper)`\r\n  flex: 1;\r\n  background: ${(props) => props.theme.palette.background.default};\r\n\r\n  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\r\n    flex: none;\r\n  }\r\n\r\n  .MuiPaper-root .MuiPaper-root {\r\n    box-shadow: none;\r\n  }\r\n`;\r\n\r\ntype DashboardPropsType = {\r\n  routes: Array<RouteType>;\r\n  width: \"md\" | \"xs\" | \"sm\" | \"lg\" | \"xl\";\r\n};\r\n\r\nconst Dashboard: React.FC<DashboardPropsType> = ({\r\n                                                   children,\r\n                                                   routes,\r\n                                                   width,\r\n                                                 }) => {\r\n\r\n  const [mobileOpen, setMobileOpen] = useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  return (\r\n    <Root>\r\n      <CssBaseline/>\r\n      <GlobalStyle/>\r\n      <Drawer>\r\n        <Hidden mdUp implementation=\"js\">\r\n          <Sidebar\r\n            routes={routes}\r\n            PaperProps={{style: {width: drawerWidth}}}\r\n            variant=\"temporary\"\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n          />\r\n        </Hidden>\r\n        <Hidden smDown implementation=\"css\">\r\n          <Sidebar\r\n            routes={routes}\r\n            PaperProps={{style: {width: drawerWidth}}}\r\n          />\r\n        </Hidden>\r\n      </Drawer>\r\n      <AppContent>\r\n        <Header onDrawerToggle={handleDrawerToggle}/>\r\n        <MainContent p={isWidthUp(\"lg\", width) ? 12 : 5}>\r\n          {children}\r\n        </MainContent>\r\n        {/*<Footer/>*/}\r\n      </AppContent>\r\n\r\n      {/*테마 고르는 컴포넌트\r\n      <Settings/>*/}\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default withWidth()(Dashboard);\r\n","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\layouts\\Auth.tsx",[],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\pages\\exception\\Page404.tsx",[],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\theme\\shadows.ts",[],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\theme\\props.ts",[],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\theme\\breakpoints.ts",[],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\theme\\overrides.ts",[],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\redux\\reducers\\index.ts",[],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\pages\\dashboard\\Dashboard.tsx",["172"],"import React, {useState} from \"react\";\r\nimport styled from \"styled-components/macro\";\r\n\r\n\r\nimport {\r\n  Grid,\r\n  Divider as MuiDivider,\r\n  Typography as MuiTypography,\r\n} from \"@material-ui/core\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\n\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nfunction DashBoard() {\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid justify=\"space-between\" container spacing={6}>\r\n        <Grid item>\r\n          <Typography variant=\"h3\" gutterBottom>\r\n            Dashboard\r\n          </Typography>\r\n        </Grid>\r\n\r\n      </Grid>\r\n\r\n      <Divider my={6} />\r\n\r\n      <Grid container spacing={6}>\r\n        <Grid item xs={12} sm={12} md={6} lg={3} xl>\r\n          1\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={12} md={6} lg={3} xl>\r\n          2\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={12} md={6} lg={3} xl>\r\n          3\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={6}>\r\n        <Grid item xs={12} lg={8}>\r\n          4\r\n        </Grid>\r\n\r\n        <Grid item xs={12} lg={4}>\r\n          5\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={6}>\r\n        <Grid item xs={12} lg={8}>\r\n          6\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default DashBoard;\r\n","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\theme\\typography.ts",[],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\theme\\variants.ts",[],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\components\\Sidebar.tsx",["173","174","175","176","177","178","179","180","181"],"import React, { useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { rgba } from \"polished\";\r\nimport { NavLink, withRouter, RouteComponentProps } from \"react-router-dom\";\r\nimport { darken } from \"polished\";\r\nimport { RouteType, RouteChildType } from \"../types/routes\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport \"../vendor/perfect-scrollbar.css\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport {\r\n  Badge,\r\n  Box as MuiBox,\r\n  Chip,\r\n  Grid,\r\n  Avatar,\r\n  Collapse,\r\n  Drawer as MuiDrawer,\r\n  List as MuiList,\r\n  ListItem,\r\n  ListItemText,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nimport { ExpandLess, ExpandMore } from \"@material-ui/icons\";\r\n\r\nimport { green } from \"@material-ui/core/colors\";\r\n\r\nimport MenuRoutes from \"../routes/MenuRoutes\";\r\nimport async from \"./Async\";\r\nimport {useTypedSelector} from \"../redux/reducers\";\r\n\r\nconst Box = styled(MuiBox)(spacing);\r\n\r\nconst Drawer = styled(MuiDrawer)`\r\n  border-right: 0;\r\n\r\n  > div {\r\n    border-right: 0;\r\n  }\r\n`;\r\n\r\nconst Scrollbar = styled(PerfectScrollbar)`\r\n  background-color: ${(props) => props.theme.sidebar.background};\r\n  border-right: 1px solid rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nconst List = styled(MuiList)`\r\n  background-color: ${(props) => props.theme.sidebar.background};\r\n`;\r\n\r\nconst Items = styled.div`\r\n  padding-top: ${(props) => props.theme.spacing(2.5)}px;\r\n  padding-bottom: ${(props) => props.theme.spacing(2.5)}px;\r\n`;\r\n\r\nconst Brand = styled(ListItem)<{\r\n  button?: boolean;\r\n  component?: React.ReactNode;\r\n  to?: string;\r\n}>`\r\n  font-size: ${(props) => props.theme.typography.h5.fontSize};\r\n  font-weight: ${(props) => props.theme.typography.fontWeightMedium};\r\n  color: ${(props) => props.theme.sidebar.header.color};\r\n  background-color: ${(props) => props.theme.sidebar.header.background};\r\n  font-family: ${(props) => props.theme.typography.fontFamily};\r\n  min-height: 56px;\r\n  padding-left: ${(props) => props.theme.spacing(6)}px;\r\n  padding-right: ${(props) => props.theme.spacing(6)}px;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n\r\n  ${(props) => props.theme.breakpoints.up(\"sm\")} {\r\n    min-height: 64px;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: ${(props) => props.theme.sidebar.header.background};\r\n  }\r\n`;\r\n\r\nconst BrandIcon = styled.img`\r\n  margin-right: ${(props) => props.theme.spacing(2)}px;\r\n  color: ${(props) => props.theme.sidebar.header.brand.color};\r\n  fill: ${(props) => props.theme.sidebar.header.brand.color};\r\n  width: 35px;\r\n  height: 34px;\r\n`;\r\n\r\nconst BrandChip = styled(Chip)`\r\n  background-color: ${green[700]};\r\n  border-radius: 5px;\r\n  color: ${(props) => props.theme.palette.common.white};\r\n  font-size: 55%;\r\n  height: 18px;\r\n  margin-left: 2px;\r\n  margin-top: -16px;\r\n  padding: 3px 0;\r\n\r\n  span {\r\n    padding-left: ${(props) => props.theme.spacing(1.375)}px;\r\n    padding-right: ${(props) => props.theme.spacing(1.375)}px;\r\n  }\r\n`;\r\n\r\ntype CategoryType = {\r\n  activeClassName?: string;\r\n  button?: boolean;\r\n  onClick?: () => void;\r\n  to?: string;\r\n  component?: typeof NavLink;\r\n  exact?: boolean;\r\n};\r\n\r\nconst Category = styled(ListItem)<CategoryType>`\r\n  padding-top: ${(props) => props.theme.spacing(3)}px;\r\n  padding-bottom: ${(props) => props.theme.spacing(3)}px;\r\n  padding-left: ${(props) => props.theme.spacing(8)}px;\r\n  padding-right: ${(props) => props.theme.spacing(7)}px;\r\n  font-weight: ${(props) => props.theme.typography.fontWeightRegular};\r\n\r\n  svg {\r\n    color: ${(props) => props.theme.sidebar.color};\r\n    font-size: 20px;\r\n    width: 20px;\r\n    height: 20px;\r\n    opacity: 0.5;\r\n  }\r\n\r\n  &:hover {\r\n    background: rgba(0, 0, 0, 0.08);\r\n  }\r\n\r\n  &.${(props) => props.activeClassName} {\r\n    background-color: ${(props) =>\r\n      darken(0.03, props.theme.sidebar.background)};\r\n\r\n    span {\r\n      color: ${(props) => props.theme.sidebar.color};\r\n    }\r\n  }\r\n`;\r\n\r\nconst CategoryText = styled(ListItemText)`\r\n  margin: 0;\r\n  span {\r\n    color: ${(props) => props.theme.sidebar.color};\r\n    font-size: ${(props) => props.theme.typography.body1.fontSize}px;\r\n    padding: 0 ${(props) => props.theme.spacing(4)}px;\r\n  }\r\n`;\r\n\r\nconst CategoryIconLess = styled(ExpandLess)`\r\n  color: ${(props) => rgba(props.theme.sidebar.color, 0.5)};\r\n`;\r\n\r\nconst CategoryIconMore = styled(ExpandMore)`\r\n  color: ${(props) => rgba(props.theme.sidebar.color, 0.5)};\r\n`;\r\n\r\nconst Link = styled(ListItem)<{\r\n  activeClassName: string;\r\n  component: typeof NavLink;\r\n  exact: boolean;\r\n  to: string;\r\n}>`\r\n  padding-left: ${(props) => props.theme.spacing(17.5)}px;\r\n  padding-top: ${(props) => props.theme.spacing(2)}px;\r\n  padding-bottom: ${(props) => props.theme.spacing(2)}px;\r\n\r\n  span {\r\n    color: ${(props) => rgba(props.theme.sidebar.color, 0.7)};\r\n  }\r\n\r\n  &:hover span {\r\n    color: ${(props) => rgba(props.theme.sidebar.color, 0.9)};\r\n  }\r\n\r\n  &:hover {\r\n    background-color: ${(props) =>\r\n      darken(0.015, props.theme.sidebar.background)};\r\n  }\r\n\r\n  &.${(props) => props.activeClassName} {\r\n    background-color: ${(props) =>\r\n      darken(0.03, props.theme.sidebar.background)};\r\n\r\n    span {\r\n      color: ${(props) => props.theme.sidebar.color};\r\n    }\r\n  }\r\n`;\r\n\r\nconst LinkText = styled(ListItemText)`\r\n  color: ${(props) => props.theme.sidebar.color};\r\n  span {\r\n    font-size: ${(props) => props.theme.typography.body1.fontSize}px;\r\n  }\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n`;\r\n\r\nconst LinkBadge = styled(Chip)`\r\n  font-size: 11px;\r\n  font-weight: ${(props) => props.theme.typography.fontWeightBold};\r\n  height: 20px;\r\n  position: absolute;\r\n  right: 28px;\r\n  top: 8px;\r\n  background: ${(props) => props.theme.sidebar.badge.background};\r\n\r\n  span.MuiChip-label,\r\n  span.MuiChip-label:hover {\r\n    cursor: pointer;\r\n    color: ${(props) => props.theme.sidebar.badge.color};\r\n    padding-left: ${(props) => props.theme.spacing(2)}px;\r\n    padding-right: ${(props) => props.theme.spacing(2)}px;\r\n  }\r\n`;\r\n\r\nconst CategoryBadge = styled(LinkBadge)`\r\n  top: 12px;\r\n`;\r\n\r\nconst SidebarSection = styled(Typography)`\r\n  color: ${(props) => props.theme.sidebar.color};\r\n  padding: ${(props) => props.theme.spacing(4)}px\r\n    ${(props) => props.theme.spacing(7)}px\r\n    ${(props) => props.theme.spacing(1)}px;\r\n  opacity: 0.9;\r\n  display: block;\r\n`;\r\n\r\nconst SidebarFooter = styled.div`\r\n  background-color: ${(props) =>\r\n    props.theme.sidebar.footer.background} !important;\r\n  padding: ${(props) => props.theme.spacing(2.75)}px\r\n    ${(props) => props.theme.spacing(4)}px;\r\n  border-right: 1px solid rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nconst SidebarFooterText = styled(Typography)`\r\n  color: ${(props) => props.theme.sidebar.footer.color};\r\n`;\r\n\r\nconst SidebarFooterSubText = styled(Typography)`\r\n  color: ${(props) => props.theme.sidebar.footer.color};\r\n  font-size: 0.7rem;\r\n  display: block;\r\n  padding: 1px;\r\n`;\r\n\r\nconst SidebarFooterBadge = styled(Badge)`\r\n  margin-right: ${(props) => props.theme.spacing(1)}px;\r\n  span {\r\n    background-color: ${(props) =>\r\n      props.theme.sidebar.footer.online.background};\r\n    border: 1.5px solid ${(props) => props.theme.palette.common.white};\r\n    height: 12px;\r\n    width: 12px;\r\n    border-radius: 50%;\r\n  }\r\n`;\r\n\r\ntype SidebarCategoryPropsType = {\r\n  name: string;\r\n  icon: JSX.Element;\r\n  classes?: string;\r\n  isOpen?: boolean;\r\n  isCollapsable: boolean;\r\n  badge?: string | number;\r\n  activeClassName?: string;\r\n  button: true;\r\n  onClick?: () => void;\r\n  to?: string;\r\n  component?: typeof NavLink;\r\n  exact?: boolean;\r\n};\r\n\r\nconst SidebarCategory: React.FC<SidebarCategoryPropsType> = ({\r\n  name,\r\n  icon,\r\n  classes,\r\n  isOpen,\r\n  isCollapsable,\r\n  badge,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Category {...rest}>\r\n      {icon}\r\n      <CategoryText>{name}</CategoryText>\r\n      {isCollapsable ? (\r\n        isOpen ? (\r\n          <CategoryIconMore />\r\n        ) : (\r\n          <CategoryIconLess />\r\n        )\r\n      ) : null}\r\n      {badge ? <CategoryBadge label={badge} /> : \"\"}\r\n    </Category>\r\n  );\r\n};\r\n\r\ntype SidebarLinkPropsType = {\r\n  name: string;\r\n  to: string;\r\n  badge?: string | number;\r\n  icon?: JSX.Element;\r\n};\r\n\r\nconst SidebarLink: React.FC<SidebarLinkPropsType> = ({\r\n  name,\r\n  to,\r\n  badge,\r\n  icon,\r\n}) => {\r\n  return (\r\n    <Link\r\n      button\r\n      dense\r\n      component={NavLink}\r\n      exact\r\n      to={to}\r\n      activeClassName=\"active\"\r\n    >\r\n      <LinkText>{name}</LinkText>\r\n      {badge ? <LinkBadge label={badge} /> : \"\"}\r\n    </Link>\r\n  );\r\n};\r\n\r\ntype SidebarPropsType = {\r\n  classes?: string;\r\n  staticContext: string;\r\n  location: {\r\n    pathname: string;\r\n  };\r\n  routes: Array<RouteType>;\r\n  PaperProps: {\r\n    style: {\r\n      width: number;\r\n    };\r\n  };\r\n  variant?: \"permanent\" | \"persistent\" | \"temporary\";\r\n  open?: boolean;\r\n  onClose?: () => void;\r\n};\r\n\r\nconst Sidebar: React.FC<RouteComponentProps & SidebarPropsType> = ({\r\n  classes,\r\n  staticContext,\r\n  location,\r\n  ...rest\r\n}) => {\r\n  type tplotOptions = {\r\n    [key: number]: boolean;\r\n  };\r\n  const initOpenRoutes = (): tplotOptions => {\r\n    /* Open collapse element that matches current url */\r\n    const pathName = location.pathname;\r\n    const routes = MenuRoutes(userAuth.menus);\r\n    let _routes = {};\r\n\r\n    routes.forEach((route: RouteType, index) => {\r\n      const isActive = pathName.indexOf(route.path) === 0;\r\n      const isOpen = route.open;\r\n      const isHome = route.containsHome && pathName === \"/\";\r\n\r\n      _routes = Object.assign({}, _routes, {\r\n        [index]: isActive || isOpen || isHome,\r\n      });\r\n    });\r\n\r\n    return _routes;\r\n  };\r\n  const userAuth = useTypedSelector(state => state.userAuth);\r\n\r\n  const [openRoutes, setOpenRoutes] = useState(() => initOpenRoutes());\r\n\r\n  const toggle = (index: number) => {\r\n    // Collapse all elements\r\n    Object.keys(openRoutes).forEach(\r\n      (item) =>\r\n        openRoutes[index] ||\r\n        setOpenRoutes((openRoutes) =>\r\n          Object.assign({}, openRoutes, { [item]: false })\r\n        )\r\n    );\r\n\r\n    // Toggle selected element\r\n    setOpenRoutes((openRoutes) =>\r\n      Object.assign({}, openRoutes, { [index]: !openRoutes[index] })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Drawer variant=\"permanent\" {...rest}>\r\n      <Brand component={NavLink} to=\"/\" button>\r\n        <BrandIcon src=\"/main-logo.png\"/>{\" \"}\r\n        <Box ml={1}>\r\n          <Typography component=\"h6\" variant=\"h6\" align=\"center\">Netsphare wcs cloud</Typography>\r\n        </Box>\r\n      </Brand>\r\n      <Scrollbar>\r\n        <List disablePadding>\r\n          <Items>\r\n            {MenuRoutes(userAuth.menus).map((category: RouteType, index) => (\r\n              <React.Fragment key={index}>\r\n\r\n\r\n                {category.children && category.icon ? (\r\n                  <React.Fragment key={index}>\r\n                    <SidebarCategory\r\n                      isOpen={!openRoutes[index]}\r\n                      isCollapsable={true}\r\n                      name={category.id}\r\n                      icon={category.icon}\r\n                      button={true}\r\n                      onClick={() => toggle(index)}\r\n                    />\r\n\r\n                    <Collapse\r\n                      in={openRoutes[index]}\r\n                      timeout=\"auto\"\r\n                      unmountOnExit\r\n                    >\r\n                      {category.children.map(\r\n                        (route: RouteChildType, index: number) => (\r\n                          <SidebarLink\r\n                            key={index}\r\n                            name={route.name}\r\n                            to={route.path}\r\n                            icon={route.icon}\r\n                            badge={route.badge}\r\n                          />\r\n                        )\r\n                      )}\r\n                    </Collapse>\r\n                  </React.Fragment>\r\n                ) : category.icon ? (\r\n                  <SidebarCategory\r\n                    isCollapsable={false}\r\n                    name={category.id}\r\n                    to={category.path}\r\n                    activeClassName=\"active\"\r\n                    component={NavLink}\r\n                    icon={category.icon}\r\n                    exact\r\n                    button\r\n                    badge={category.badge}\r\n                  />\r\n                ) : null}\r\n              </React.Fragment>\r\n            ))}\r\n          </Items>\r\n        </List>\r\n      </Scrollbar>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default withRouter(Sidebar);\r\n","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\components\\AppBar.tsx",["182","183","184","185"],"import * as React from \"react\";\r\nimport styled, { withTheme } from \"styled-components/macro\";\r\nimport { darken } from \"polished\";\r\nimport { Search as SearchIcon } from \"react-feather\";\r\n\r\nimport {\r\n  Grid,\r\n  Hidden,\r\n  InputBase,\r\n  AppBar as MuiAppBar,\r\n  IconButton as MuiIconButton,\r\n  Toolbar,\r\n} from \"@material-ui/core\";\r\n\r\nimport { Menu as MenuIcon } from \"@material-ui/icons\";\r\n\r\nimport UserDropdown from \"./UserDropdown\";\r\n\r\nconst AppBar = styled(MuiAppBar)`\r\n  background: ${(props) => props.theme.palette.background.default};\r\n  color: ${(props) => props.theme.header.color};\r\n`;\r\n\r\nconst IconButton = styled(MuiIconButton)`\r\n  svg {\r\n    width: 22px;\r\n    height: 22px;\r\n  }\r\n`;\r\n\r\nconst Search = styled.div`\r\n  border-radius: 2px;\r\n  background-color: ${(props) => props.theme.header.background};\r\n  display: none;\r\n  position: relative;\r\n  width: 100%;\r\n\r\n  &:hover {\r\n    background-color: ${(props) => darken(0.05, props.theme.header.background)};\r\n  }\r\n\r\n  ${(props) => props.theme.breakpoints.up(\"md\")} {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst SearchIconWrapper = styled.div`\r\n  width: 50px;\r\n  height: 100%;\r\n  position: absolute;\r\n  pointer-events: none;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  svg {\r\n    width: 22px;\r\n    height: 22px;\r\n  }\r\n`;\r\n\r\nconst Input = styled(InputBase)`\r\n  color: inherit;\r\n  width: 100%;\r\n\r\n  > input {\r\n    color: ${(props) => props.theme.header.search.color};\r\n    padding-top: ${(props) => props.theme.spacing(2.5)}px;\r\n    padding-right: ${(props) => props.theme.spacing(2.5)}px;\r\n    padding-bottom: ${(props) => props.theme.spacing(2.5)}px;\r\n    padding-left: ${(props) => props.theme.spacing(12)}px;\r\n    width: 160px;\r\n  }\r\n`;\r\n\r\ntype AppBarProps = {\r\n  theme: {};\r\n  onDrawerToggle: React.MouseEventHandler<HTMLElement>;\r\n};\r\n\r\nconst AppBarComponent: React.FC<AppBarProps> = ({ onDrawerToggle }) => (\r\n  <React.Fragment>\r\n    <AppBar position=\"sticky\" elevation={0}>\r\n      <Toolbar>\r\n        <Grid container alignItems=\"center\">\r\n          <Hidden mdUp>\r\n            <Grid item>\r\n              <IconButton\r\n                color=\"inherit\"\r\n                aria-label=\"Open drawer\"\r\n                onClick={onDrawerToggle}\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n            </Grid>\r\n          </Hidden>\r\n          <Grid item>\r\n            {/*<Search>\r\n              <SearchIconWrapper>\r\n                <SearchIcon />\r\n              </SearchIconWrapper>\r\n              <Input placeholder=\"Search topics\" />\r\n            </Search>*/}\r\n          </Grid>\r\n          <Grid item xs />\r\n          <Grid item>\r\n            {/*<MessagesDropdown />\r\n            <NotificationsDropdown />\r\n            <LanguagesDropdown />*/}\r\n            <UserDropdown />\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n    </AppBar>\r\n  </React.Fragment>\r\n);\r\n\r\nexport default withTheme(AppBarComponent);\r\n","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\components\\Async.tsx",[],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\redux\\reducers\\authReducer.ts",[],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\redux\\reducers\\authMenuStore.tsx",["186"],"import React from \"react\";\r\nimport {UserMenu} from \"../../model/Menu\";\r\n\r\n\r\nexport interface UserAuthMenu {\r\n    menus : UserMenu[]\r\n}\r\n\r\nexport const SET_USER_MENU = \"SET_USER_MENU\";\r\n\r\ninterface SetUserAuthMenuAction {\r\n    type: typeof SET_USER_MENU\r\n    payload: UserMenu[]\r\n}\r\n\r\nexport type UserAuthActionTypes = SetUserAuthMenuAction;\r\n\r\nexport function setUserAuthMenu(menus:UserMenu[]) {\r\n    return {\r\n        type: SET_USER_MENU,\r\n        payload: menus\r\n    };\r\n}\r\n\r\nconst initialState : UserMenu[] = [];\r\n\r\nexport function userAuthMenuReducer(state=initialState, action:UserAuthActionTypes) {\r\n\r\n    switch (action.type) {\r\n        case \"SET_USER_MENU\": return {\r\n            menus: action.payload as UserMenu[]\r\n        }\r\n        default: return state;\r\n    }\r\n\r\n}","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\redux\\reducers\\authStore.tsx",["187"],"import React from \"react\";\r\nimport {UserMenu} from \"../../model/Menu\";\r\n\r\nexport interface UserAuth {\r\n    userid: string\r\n    username: string,\r\n    accessToken: string,\r\n    isAuth: boolean,\r\n    menus: UserMenu[]\r\n}\r\n\r\nexport const USER_LOGIN = \"USER_LOGIN\";\r\nexport const USER_LOGOUT = \"USER_LOGOUT\";\r\n\r\ninterface UserLoginAction {\r\n    type: typeof USER_LOGIN,\r\n    payload: UserAuth\r\n}\r\n\r\ninterface UserLogoutAction {\r\n    type: typeof USER_LOGOUT\r\n}\r\n\r\nexport type UserAuthActionTypes = UserLoginAction | UserLogoutAction;\r\n\r\nexport function setCurrentUserInfo(userAuth:UserAuth) : UserAuthActionTypes {\r\n    return {\r\n        type: USER_LOGIN,\r\n        payload: userAuth\r\n    };\r\n}\r\n\r\nexport function userLogout() : UserAuthActionTypes {\r\n    return {\r\n        type: USER_LOGOUT\r\n    };\r\n}\r\n\r\n//\r\n//  상태 초기값 설정\r\nconst initialState: UserAuth = {\r\n    userid: \"\",\r\n    username: \"\",\r\n    accessToken: \"\",\r\n    isAuth: false,\r\n    menus: []\r\n}\r\n\r\nexport function userAuthReducer(state= initialState, action : UserAuthActionTypes) : UserAuth {\r\n\r\n    switch (action.type) {\r\n        case USER_LOGIN: return {\r\n            userid: action.payload.userid,\r\n            username: action.payload.username,\r\n            accessToken: action.payload.accessToken,\r\n            isAuth: true,\r\n            menus: action.payload.menus\r\n        }\r\n        case USER_LOGOUT: return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\pages\\dashboard\\DeviceConnectionInfo.tsx",[],["188","189"],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\redux\\reducers\\themeReducer.ts",[],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\pages\\dashboard\\DoughnutChartByOperation.tsx",["190","191","192","193"],"import React from \"react\";\r\nimport styled, { withTheme, ThemeProps } from \"styled-components/macro\";\r\n\r\nimport {green, red, indigo, cyan, lightBlue, teal} from \"@material-ui/core/colors\";\r\n\r\nimport {\r\n  Card as MuiCard,\r\n  CardContent,\r\n  CardHeader,\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell as MuiTableCell,\r\n  TableHead,\r\n  TableRow as MuiTableRow,\r\n  Typography,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport { Doughnut } from \"react-chartjs-2\";\r\n\r\nimport { MoreVertical } from \"react-feather\";\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst ChartWrapper = styled.div`\r\n  height: 168px;\r\n  position: relative;\r\n`;\r\n\r\nconst DoughnutInner = styled.div`\r\n  width: 100%;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 0;\r\n  margin-top: -22px;\r\n  text-align: center;\r\n  z-index: 0;\r\n`;\r\n\r\nconst TableRow = styled(MuiTableRow)`\r\n  height: 42px;\r\n`;\r\n\r\nconst TableCell = styled(MuiTableCell)`\r\n  padding-top: 0;\r\n  padding-bottom: 0;\r\n`;\r\n\r\nconst GreenText = styled.span`\r\n  color: ${() => green[400]};\r\n  font-weight: ${(props) => props.theme.typography.fontWeightMedium};\r\n`;\r\n\r\nconst RedText = styled.span`\r\n  color: ${() => red[400]};\r\n  font-weight: ${(props) => props.theme.typography.fontWeightMedium};\r\n`;\r\n\r\ntype DoughnutChartByOperationProps = {\r\n  total:number,\r\n  labelArray: string[],\r\n  dataArray: number[]\r\n}\r\n\r\nexport default function DoughnutChartByOperation(props:DoughnutChartByOperationProps) {\r\n  const data = {\r\n    labels: props.labelArray,\r\n    datasets: [\r\n      {\r\n        data: props.dataArray,\r\n        backgroundColor: [\r\n          indigo['A100'],\r\n          cyan['700'],\r\n          lightBlue['400'],\r\n          teal['A400']\r\n        ],\r\n        borderWidth: 0,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    maintainAspectRatio: false,\r\n    legend: {\r\n      display: false,\r\n    },\r\n    cutoutPercentage: 80,\r\n  };\r\n\r\n  return (\r\n    <Card mb={3}>\r\n      <CardHeader\r\n        action={\r\n          <IconButton aria-label=\"settings\">\r\n            <MoreVertical />\r\n          </IconButton>\r\n        }\r\n        title=\"출고 운영업무별 작업비율\"\r\n      />\r\n\r\n      <CardContent>\r\n        <ChartWrapper>\r\n          <DoughnutInner>\r\n            <Typography variant=\"h4\">{props.total.toLocaleString() + \" 건\"}</Typography>\r\n          </DoughnutInner>\r\n          <Doughnut data={data} options={options} />\r\n        </ChartWrapper>\r\n\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>분류</TableCell>\r\n              <TableCell align=\"right\">수량 (건)</TableCell>\r\n              <TableCell align=\"right\">비율</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {\r\n              props.labelArray.map((label, index) => {\r\n                return (\r\n                  <TableRow key={index}>\r\n                    <TableCell component=\"th\" scope=\"row\">{label}</TableCell>\r\n                    <TableCell align=\"right\">{props.dataArray[index].toLocaleString()}</TableCell>\r\n                    <TableCell align=\"right\">\r\n                      <GreenText>{(props.dataArray[index]/props.total*100).toFixed(2).toString()+\"%\"}</GreenText>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })\r\n            }\r\n          </TableBody>\r\n        </Table>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\n","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\pages\\dashboard\\Stats.tsx",[],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\pages\\dashboard\\LineChart.tsx",[],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\pages\\dashboard\\Actions.tsx",["194","195","196"],"import React, {useEffect} from \"react\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { Button as MuiButton, Menu, MenuItem } from \"@material-ui/core\";\r\n\r\nimport {\r\n  Loop as LoopIcon,\r\n  FilterList as FilterListIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst SmallButton = styled(Button)`\r\n  padding: 4px;\r\n  min-width: 0;\r\n\r\n  svg {\r\n    width: 0.9em;\r\n    height: 0.9em;\r\n  }\r\n`;\r\n\r\nfunction Actions() {\r\n  const [today, setToday] = React.useState(new Date());\r\n  const [reMountFlag, setReMountFlag] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    setToday(new Date());\r\n\r\n  },[reMountFlag]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <SmallButton size=\"small\" mr={2}>\r\n        <LoopIcon onClick={() => {setReMountFlag(!reMountFlag)}}/>\r\n      </SmallButton>\r\n      {today.getFullYear()+\"/\"+(today.getMonth()+1)+\"/\"+today.getDate()+\" - \"+today.getHours()+\":\"+today.getMinutes()+\":\"+today.getSeconds()}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Actions;\r\n","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\components\\Loader.tsx",[],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\constants\\index.ts",[],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\components\\UserDropdown.tsx",["197","198"],"import * as React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Power } from \"react-feather\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  Tooltip,\r\n  Menu,\r\n  MenuItem,\r\n  IconButton as MuiIconButton,\r\n} from \"@material-ui/core\";\r\n\r\n\r\nconst IconButton = styled(MuiIconButton)`\r\n  svg {\r\n    width: 22px;\r\n    height: 22px;\r\n  }\r\n`;\r\n\r\nfunction UserDropdown() {\r\n  const [anchorMenu, setAnchorMenu] = React.useState<any>(null);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const toggleMenu = (event: React.SyntheticEvent) => {\r\n    setAnchorMenu(event.currentTarget);\r\n  };\r\n\r\n  const closeMenu = () => {\r\n    setAnchorMenu(null);\r\n  };\r\n\r\n  const handleSignOut = async () => {\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Tooltip title=\"Account\">\r\n        <IconButton\r\n          aria-owns={Boolean(anchorMenu) ? \"menu-appbar\" : undefined}\r\n          aria-haspopup=\"true\"\r\n          onClick={toggleMenu}\r\n          color=\"inherit\"\r\n        >\r\n          <Power />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Menu\r\n        id=\"menu-appbar\"\r\n        anchorEl={anchorMenu}\r\n        open={Boolean(anchorMenu)}\r\n        onClose={closeMenu}\r\n      >\r\n        <MenuItem onClick={closeMenu}>Profile</MenuItem>\r\n        <MenuItem onClick={handleSignOut}>Sign out</MenuItem>\r\n      </Menu>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default UserDropdown;\r\n","C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\redux\\actions\\themeActions.ts",[],"C:\\Users\\정진구\\IdeaProjects\\homeServer\\src\\redux\\store\\index.ts",[],{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","severity":1,"message":"204","line":31,"column":8,"nodeType":"205","endLine":31,"endColumn":10,"suggestions":"206"},{"ruleId":"207","severity":1,"message":"208","line":35,"column":25,"nodeType":"209","messageId":"210","endLine":35,"endColumn":27},{"ruleId":"211","severity":1,"message":"212","line":11,"column":9,"nodeType":"213","messageId":"214","endLine":11,"endColumn":23},{"ruleId":"211","severity":1,"message":"215","line":5,"column":3,"nodeType":"213","messageId":"214","endLine":5,"endColumn":15},{"ruleId":"211","severity":1,"message":"216","line":6,"column":3,"nodeType":"213","messageId":"214","endLine":6,"endColumn":11},{"ruleId":"211","severity":1,"message":"217","line":8,"column":3,"nodeType":"213","messageId":"214","endLine":8,"endColumn":8},{"ruleId":"211","severity":1,"message":"218","line":8,"column":10,"nodeType":"213","messageId":"214","endLine":8,"endColumn":19},{"ruleId":"211","severity":1,"message":"219","line":13,"column":8,"nodeType":"213","messageId":"214","endLine":13,"endColumn":14},{"ruleId":"207","severity":1,"message":"220","line":31,"column":53,"nodeType":"209","messageId":"210","endLine":31,"endColumn":55},{"ruleId":"207","severity":1,"message":"208","line":33,"column":20,"nodeType":"209","messageId":"210","endLine":33,"endColumn":22},{"ruleId":"221","severity":1,"message":"222","line":45,"column":9,"nodeType":"223","messageId":"224","endLine":45,"endColumn":15},{"ruleId":"221","severity":1,"message":"222","line":48,"column":9,"nodeType":"223","messageId":"224","endLine":48,"endColumn":15},{"ruleId":"221","severity":1,"message":"222","line":51,"column":9,"nodeType":"223","messageId":"224","endLine":51,"endColumn":15},{"ruleId":"221","severity":1,"message":"222","line":54,"column":9,"nodeType":"223","messageId":"224","endLine":54,"endColumn":15},{"ruleId":"221","severity":1,"message":"222","line":57,"column":9,"nodeType":"223","messageId":"224","endLine":57,"endColumn":15},{"ruleId":"221","severity":1,"message":"222","line":60,"column":9,"nodeType":"223","messageId":"224","endLine":60,"endColumn":15},{"ruleId":"221","severity":1,"message":"222","line":63,"column":9,"nodeType":"223","messageId":"224","endLine":63,"endColumn":15},{"ruleId":"221","severity":1,"message":"222","line":66,"column":9,"nodeType":"223","messageId":"224","endLine":66,"endColumn":15},{"ruleId":"211","severity":1,"message":"225","line":7,"column":8,"nodeType":"213","messageId":"214","endLine":7,"endColumn":14},{"ruleId":"211","severity":1,"message":"226","line":8,"column":8,"nodeType":"213","messageId":"214","endLine":8,"endColumn":16},{"ruleId":"211","severity":1,"message":"227","line":1,"column":16,"nodeType":"213","messageId":"214","endLine":1,"endColumn":24},{"ruleId":"211","severity":1,"message":"228","line":16,"column":3,"nodeType":"213","messageId":"214","endLine":16,"endColumn":7},{"ruleId":"211","severity":1,"message":"229","line":17,"column":3,"nodeType":"213","messageId":"214","endLine":17,"endColumn":9},{"ruleId":"211","severity":1,"message":"230","line":31,"column":8,"nodeType":"213","messageId":"214","endLine":31,"endColumn":13},{"ruleId":"211","severity":1,"message":"231","line":91,"column":7,"nodeType":"213","messageId":"214","endLine":91,"endColumn":16},{"ruleId":"211","severity":1,"message":"232","line":226,"column":7,"nodeType":"213","messageId":"214","endLine":226,"endColumn":21},{"ruleId":"211","severity":1,"message":"233","line":235,"column":7,"nodeType":"213","messageId":"214","endLine":235,"endColumn":20},{"ruleId":"211","severity":1,"message":"234","line":243,"column":7,"nodeType":"213","messageId":"214","endLine":243,"endColumn":24},{"ruleId":"211","severity":1,"message":"235","line":247,"column":7,"nodeType":"213","messageId":"214","endLine":247,"endColumn":27},{"ruleId":"211","severity":1,"message":"236","line":254,"column":7,"nodeType":"213","messageId":"214","endLine":254,"endColumn":25},{"ruleId":"211","severity":1,"message":"237","line":4,"column":20,"nodeType":"213","messageId":"214","endLine":4,"endColumn":30},{"ruleId":"211","severity":1,"message":"238","line":31,"column":7,"nodeType":"213","messageId":"214","endLine":31,"endColumn":13},{"ruleId":"211","severity":1,"message":"239","line":47,"column":7,"nodeType":"213","messageId":"214","endLine":47,"endColumn":24},{"ruleId":"211","severity":1,"message":"240","line":62,"column":7,"nodeType":"213","messageId":"214","endLine":62,"endColumn":12},{"ruleId":"211","severity":1,"message":"241","line":1,"column":8,"nodeType":"213","messageId":"214","endLine":1,"endColumn":13},{"ruleId":"211","severity":1,"message":"241","line":1,"column":8,"nodeType":"213","messageId":"214","endLine":1,"endColumn":13},{"ruleId":"199","replacedBy":"242"},{"ruleId":"201","replacedBy":"243"},{"ruleId":"211","severity":1,"message":"244","line":2,"column":18,"nodeType":"213","messageId":"214","endLine":2,"endColumn":27},{"ruleId":"211","severity":1,"message":"245","line":2,"column":29,"nodeType":"213","messageId":"214","endLine":2,"endColumn":39},{"ruleId":"211","severity":1,"message":"246","line":17,"column":3,"nodeType":"213","messageId":"214","endLine":17,"endColumn":8},{"ruleId":"211","severity":1,"message":"247","line":57,"column":7,"nodeType":"213","messageId":"214","endLine":57,"endColumn":14},{"ruleId":"211","severity":1,"message":"248","line":4,"column":31,"nodeType":"213","messageId":"214","endLine":4,"endColumn":35},{"ruleId":"211","severity":1,"message":"249","line":4,"column":37,"nodeType":"213","messageId":"214","endLine":4,"endColumn":45},{"ruleId":"211","severity":1,"message":"250","line":8,"column":17,"nodeType":"213","messageId":"214","endLine":8,"endColumn":31},{"ruleId":"211","severity":1,"message":"251","line":24,"column":9,"nodeType":"213","messageId":"214","endLine":24,"endColumn":16},{"ruleId":"211","severity":1,"message":"252","line":25,"column":9,"nodeType":"213","messageId":"214","endLine":25,"endColumn":17},"no-native-reassign",["253"],"no-negated-in-lhs",["254"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'settingTheme'. Either include it or remove the dependency array.","ArrayExpression",["255"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'RouteChildType' is defined but never used.","Identifier","unusedVar","'ShoppingCart' is defined but never used.","'PieChart' is defined but never used.","'Users' is defined but never used.","'IconProps' is defined but never used.","'Routes' is defined but never used.","Expected '===' and instead saw '=='.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'Footer' is defined but never used.","'Settings' is defined but never used.","'useState' is defined but never used.","'Grid' is defined but never used.","'Avatar' is defined but never used.","'async' is defined but never used.","'BrandChip' is assigned a value but never used.","'SidebarSection' is assigned a value but never used.","'SidebarFooter' is assigned a value but never used.","'SidebarFooterText' is assigned a value but never used.","'SidebarFooterSubText' is assigned a value but never used.","'SidebarFooterBadge' is assigned a value but never used.","'SearchIcon' is defined but never used.","'Search' is assigned a value but never used.","'SearchIconWrapper' is assigned a value but never used.","'Input' is assigned a value but never used.","'React' is defined but never used.",["253"],["254"],"'withTheme' is defined but never used.","'ThemeProps' is defined but never used.","'Theme' is defined but never used.","'RedText' is assigned a value but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'FilterListIcon' is defined but never used.","'history' is assigned a value but never used.","'dispatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"256","fix":"257"},"Update the dependencies array to be: [settingTheme]",{"range":"258","text":"259"},[1002,1004],"[settingTheme]"]